name: PR Update

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  # read on both needed for changes detection
  pull-requests: read
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  slack:
    # Open a new PR thread on Slack for this CI run. 
    uses: SwanseaUniversityMedical/workflows/.github/workflows/slack-pr-thread.yaml@v4.1.0
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  changes:
    # Detect which files have been changed on this PR's full history
    needs: slack
    uses: SwanseaUniversityMedical/workflows/.github/workflows/changes.yaml@v4.1.0
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      filters: |
        container:
          - './.github/workflows/on-pr-update.yaml'
          - 'containers/**'
        chart:
        - './.github/workflows/on-pr-update.yaml'
        - 'charts/**'

    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}

  jupyterhub-container:
    # Build the container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v4.1.0
    with:
      job-name: jupyterhub-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: jupyterhub
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        sudo apt update &&
        sudo apt install python3.8-venv &&
        python -m pip install --user --upgrade build &&
        python -m build --outdir ./dist ./containers/custom-packages/jupyter-cloudbeaver-proxy &&
        python -m build --outdir ./dist ./containers/custom-packages/jupyter-rsession-proxy &&
        docker build -t $IMAGE -f containers/jupyterhub/Dockerfile .
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  jupyterlab-standard-container:
    # Build the container and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).container == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-container.yaml@v4.1.0
    with:
      job-name: jupyterlab-standard-container
      container-registry: ${{ vars.HARBOR_REGISTRY }}
      container-registry-user: ${{ vars.HARBOR_USER }}
      container-registry-project: ${{ vars.HARBOR_PROJECT }}
      container-registry-repo: ${{ vars.HARBOR_REPO }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      build-command: |
        sudo apt update &&
        sudo apt install python3.8-venv &&
        python -m pip install --user --upgrade build &&
        python -m build --outdir ./dist ./containers/custom-packages/jupyter-cloudbeaver-proxy &&
        python -m build --outdir ./dist ./containers/custom-packages/jupyter-rsession-proxy &&
        docker build -t $IMAGE -f containers/jupyterlab/standard.Dockerfile .
    secrets:
      container-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  chart:
    # Build the chart and push it as :pr-42 and :pr-42-fe45b3h
    needs:
      - slack
      - changes
    if: fromJSON(needs.changes.outputs.changes).chart == 'true'
    uses: SwanseaUniversityMedical/workflows/.github/workflows/on-pr-update-chart.yaml@v4.1.0
    with:
      job-name: chart
      chart: charts/**
      chart-registry: ${{ vars.HARBOR_REGISTRY }}
      chart-registry-user: ${{ vars.HARBOR_USER }}
      chart-registry-project: ${{ vars.HARBOR_PROJECT }}
      chart-registry-repo: ${{ vars.HARBOR_REPO }}
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      test-command: |
        helm template $CHART --values charts/jupyter/values.yaml
    secrets:
      chart-registry-token: ${{ secrets.HARBOR_TOKEN }}
      slack-token: ${{ secrets.SLACK_TOKEN }}

  slack-update:
    # Update the original Slack message with the final workflow status
    # WARNING! ALL UPSTREAM JOBS MUST BE DECLARED HERE TO REPORT FAILURES CORRECTLY!
    needs:
      - slack
      - changes
      - jupyterhub-container
      - jupyterlab-standard-container
      - chart
    uses: SwanseaUniversityMedical/workflows/.github/workflows/slack-pr-thread.yaml@v4.1.0
    if: always()
    with:
      slack-channel: ${{ vars.SLACK_CHANNEL }}
      slack-thread: ${{ needs.slack.outputs.thread }}
      status: ${{ contains(join(needs.*.result, ','), 'failure') && ':no_entry:' || ':white_check_mark:' }}
    secrets:
      slack-token: ${{ secrets.SLACK_TOKEN }}
